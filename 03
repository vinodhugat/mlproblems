import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

#load the dataset
df = pd.read_csv("50_Startups.csv")

#selecting features (X) and target variable (Y)
selected_features = ['R&D Spend','Administration','Marketing Spend']
X = df[selected_features]
Y = df['Profit']

# Split the dataset into training and testing sets
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

#create a linear regression model
model = LinearRegression()

#train the model
model.fit(X_train, Y_train)

#make predictions on the test set
Y_pred = model.predict(X_test)

#evaluate the model
mse = mean_squared_error(Y_test, Y_pred)
print(f"Mean Squared Error: {mse:.2f}")

#visualize prediction as actual values
plt.scatter(Y_test, Y_pred)
plt.plot([min(Y_test), max(Y_test)],[min(Y_test), max(Y_test)], linestyle='--', color='red', linewidth=2)  #diagonal line for reference
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Prices v/s Predicted Prices")
plt.show()
